buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-${mod_phase}-${minecraft_version}"
group = 'cloud.lemonslice.sliveroak'
archivesBaseName = 'SliveroakOutpost'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                sliveroakoutpost {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                sliveroakoutpost {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            args '--mod', 'sliveroakoutpost', '--all', '--output', file('src/generated/resources/')

            mods {
                sliveroakoutpost {
                    source sourceSets.main
                }
            }
        }
    }
}

def info = [
        "Specification-Title": "sliveroakoutpost",
        "Specification-Vendor": "Lemon Slice Studio",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"Lemon Slice Studio",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

task deobfJar(type: Jar) {
    manifest {
        attributes(info)
    }
    from(sourceSets.main.output)
    archiveName = "${archivesBaseName}-${version}-deobf.${extension}"
}

artifacts {
    archives deobfJar
}

repositories {
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

}

jar {
    manifest {
        attributes(info)
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}